{"version":3,"sources":["views/HomePage.js","api/apiServices.js","Component/Content/Content.jsx","Component/MoviesList/MoviesList.jsx"],"names":["HomePage","useState","movies","setMovies","useEffect","getPopularFilms","then","data","axios","defaults","baseURL","params","api_key","language","a","get","results","console","log","getFilms","filmTitle","getFilmById","id","getFilmInformationById","url","useStyles","createUseStyles","content","padding","Content","children","classes","className","withRouter","location","map","title","to","pathname","routes","state","from"],"mappings":"mMAoBeA,UAfE,WAAO,IAAD,EACOC,mBAAS,IADhB,mBACdC,EADc,KACNC,EADM,KAOrB,OAJAC,qBAAU,WACRC,cAAkBC,MAAK,SAAAC,GAAI,OAAIJ,EAAUI,QACxC,IAGD,eAAC,IAAD,WACE,gDACA,cAAC,IAAD,CAAYL,OAAQA,S,sNCV1BM,IAAMC,SAASC,QAFE,+BAGjBF,IAAMC,SAASE,OAAS,CACtBC,QALc,mCAMdC,SAAU,SAGZ,IAAMR,EAAe,uCAAG,8BAAAS,EAAA,+EAEGN,IAAMO,IAAN,uBAFH,uBAEZR,EAFY,EAEZA,KAFY,kBAIbA,EAAKS,SAJQ,uCAMpBC,QAAQC,IAAR,MANoB,kBAOb,IAPa,yDAAH,qDAWfC,EAAQ,uCAAG,WAAMC,GAAN,iBAAAN,EAAA,+EAEUN,IAAMO,IAAN,8BAAiCK,IAF3C,uBAELb,EAFK,EAELA,KAFK,kBAINA,EAAKS,SAJC,uCAMbC,QAAQC,IAAR,MANa,kBAON,IAPM,yDAAH,sDAURG,EAAW,uCAAG,WAAMC,GAAN,iBAAAR,EAAA,+EAEON,IAAMO,IAAN,iBAAoBO,IAF3B,uBAERf,EAFQ,EAERA,KAFQ,kBAITA,GAJS,uCAMhBU,QAAQC,IAAR,MANgB,kBAOT,MAPS,yDAAH,sDAUXK,EAAsB,uCAAG,WAAOD,EAAIE,GAAX,iBAAAV,EAAA,+EAEJN,IAAMO,IAAN,iBAAoBO,EAApB,YAA0BE,IAFtB,uBAEnBjB,EAFmB,EAEnBA,KAFmB,kBAIpBA,GAJoB,uCAM3BU,QAAQC,IAAR,MAN2B,kBAOpB,MAPoB,yDAAH,yD,qFCxCtBO,EAAYC,YAAgB,CAChCC,QAAS,CACPC,QAAS,UAUEC,EANC,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACXC,EAAUN,IAEhB,OAAO,yBAASO,UAAWD,EAAQJ,QAA5B,SAAsCG,M,oGCoBhCG,eA3BI,SAAC,GAA0B,IAAxB/B,EAAuB,EAAvBA,OAAQgC,EAAe,EAAfA,SAC5B,OACE,6BACGhC,EAAOiC,KAAI,gBAAGb,EAAH,EAAGA,GAAIc,EAAP,EAAOA,MAAP,OACV,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,GAAD,OAAKC,IAAOrC,OAAZ,YAAsBoB,GAC9BkB,MAAO,CAAEC,KAAMP,IAHnB,SAMGE,KAPId","file":"static/js/home-page.1df0aeb3.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { getPopularFilms } from '../api/apiServices';\nimport Content from '../Component/Content';\nimport MoviesList from '../Component/MoviesList';\n\nconst HomePage = () => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    getPopularFilms().then(data => setMovies(data));\n  }, []);\n\n  return (\n    <Content>\n      <h1>Trending today</h1>\n      <MoviesList movies={movies} />\n    </Content>\n  );\n};\n\nexport default HomePage;\n","import axios from 'axios';\n\nconst API_KEY = '880b7dded6194e61d02eaef0adce9b9b';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\naxios.defaults.baseURL = BASE_URL;\naxios.defaults.params = {\n  api_key: API_KEY,\n  language: 'en-US',\n};\n\nconst getPopularFilms = async () => {\n  try {\n    const { data } = await axios.get(`/trending/movie/day`);\n\n    return data.results;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n};\n\nconst getFilms = async filmTitle => {\n  try {\n    const { data } = await axios.get(`/search/movie?query=${filmTitle}`);\n\n    return data.results;\n  } catch (error) {\n    console.log(error);\n    return [];\n  }\n};\nconst getFilmById = async id => {\n  try {\n    const { data } = await axios.get(`/movie/${id}`);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\nconst getFilmInformationById = async (id, url) => {\n  try {\n    const { data } = await axios.get(`/movie/${id}/${url}`);\n\n    return data;\n  } catch (error) {\n    console.log(error);\n    return null;\n  }\n};\n\nexport { getPopularFilms, getFilms, getFilmById, getFilmInformationById };\n","import { createUseStyles } from 'react-jss';\n\nconst useStyles = createUseStyles({\n  content: {\n    padding: '30px',\n  },\n});\n\nconst Content = ({ children }) => {\n  const classes = useStyles();\n\n  return <section className={classes.content}>{children}</section>;\n};\n\nexport default Content;\n","import { Link, withRouter } from 'react-router-dom';\nimport routes from '../../routes';\nimport PropTypes from 'prop-types';\n\nconst MoviesList = ({ movies, location }) => {\n  return (\n    <ul>\n      {movies.map(({ id, title }) => (\n        <li key={id}>\n          <Link\n            to={{\n              pathname: `${routes.movies}/${id}`,\n              state: { from: location },\n            }}\n          >\n            {title}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number,\n      name: PropTypes.string,\n    }).isRequired,\n  ),\n};\nexport default withRouter(MoviesList);\n"],"sourceRoot":""}